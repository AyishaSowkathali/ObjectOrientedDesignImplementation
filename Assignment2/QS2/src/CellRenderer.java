import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;

import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 * 
 * @author Ayisha S.R. Sowkathali, Sifaben Vahora
 * 
 *         CellRender.java
 *
 *         Class allows the user to click on the table cell to set appointment
 *
 */
class CellRenderer extends DefaultTableCellRenderer {

	/*
	 * serialVersionUID is generated by default to be used during deserialization to
	 * verify that the sender and receiver of a serialized object have loaded
	 * classes for that object that are compatible with respect to serialization
	 */
	private static final long serialVersionUID = 1L;

	ArrayList<SetAppointment> appointmentList;
	SetAppointment current;

	public CellRenderer(ArrayList<SetAppointment> appointmentList) {
		this.appointmentList = appointmentList;
	}

	public void setCurrent(SetAppointment current) {
		this.current = current;
	}

	@Override
	public Component getTableCellRendererComponent(JTable table, Object obj, boolean isSelected, boolean hasFocus,
			int row, int column) {

		Component cell = super.getTableCellRendererComponent(table, obj, isSelected, hasFocus, row, column);
		cell.setBackground(Color.white);
		Object value = table.getModel().getValueAt(row, column);
		if (current != null && value != null) {
			current.day = (Integer) value;
			if (current.day != 0) {
				int index = appointmentList.indexOf(current);
				if (index >= 0) {
					cell.setBackground(Color.yellow);
				}
			}
		}
		return cell;
	}
}